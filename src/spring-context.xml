<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/jee
           http://www.springframework.org/schema/jee/spring-jee.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

    
    <!-- 启动SpringMVC的注解功能，它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
    <mvc:annotation-driven />
    <mvc:default-servlet-handler />
    <!--通用视图解析器 -->
    <bean id="viewResolverCommon"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="order" value="1" />
    </bean>
      <!-- 启动扫描com.tianj.demo下所有的注解--> <!-- 处理器 --> 
	<context:component-scan base-package="com.tianj.demo.*"/>
	
	<mvc:annotation-driven ignore-default-model-on-redirect="true"/> 
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jndi/zaixzx</value>
		</property>
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean>
     
      <!-- 创建SqlSessionFactory，同时指定数据源以及mybatis-config.xml -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        
        <property name="mapperLocations"  

             value="classpath:com/dao/Mapper/xml/*.xml" /> 
             
         <property name="configLocation" value="classpath:mybatis-config.xml"></property>  
    </bean> 
    
    
    
    
     <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
    
   <!-- 员工Dao -->
	<bean id="EmployeeDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
    	<property name="mapperInterface" value="com.dao.EmployeeDao" />  
    	<property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	</bean>
    
    
    
</beans>
    